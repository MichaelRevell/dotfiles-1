#$Id$: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

#change command sequence to alt-`
#unbind C-b
set-option -g prefix `
bind-key ` send-prefix
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind v split-window -v
bind \ split-window -h
bind r source-file ~/.tmux.conf \; display-message "Config reloaded . . ." 
# move around panes with hjkl, as one would in vim after pressing ctrl-w
#bind h select-pane -L
#top pane
bind t select-pane -L
#bottom pane
bind b select-pane -D
bind k select-pane -D
#left pane
bind h select-pane -U
#right pane
bind l select-pane -R
bind -n M-k swap-pane -D
# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 5
bind > resize-pane -R 5
bind - resize-pane -D 5
bind = resize-pane -U 5

# bind : to command-prompt like vim
# this is the default in tmux already
#bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

#set -g default-command zsh
#set-option -g default-shell /opt/local/bin/zsh
set -g display-time 3000
#number windows starting from 1
set -g base-index 1

set-option -g mouse-select-window on
set-option -g mouse-select-pan on
set-option -g mouse-resize-pan on
set-window-option -g mode-mouse on
# Bind function keys.
bind 1 select-window -t 1
bind 2 select-window -t 2
bind 3 select-window -t 3
bind 4 select-window -t 4
bind 5 select-window -t 5
bind 6 select-window -t 6
bind 7 select-window -t 7
bind 8 select-window -t 8
bind 9 select-window -t 8
bind 0 select-window -t 8
bind-key b set-option status
bind '~' split-window "exec htop"

#scrollback buffer n lines
set -g history-limit 5000

#listen for activity on all windows
set -g bell-action none
#set window notifications
setw -g monitor-activity off
set -g visual-activity off
#onscreen time for display panes in ms
set -g display-panes-time 2000

#ctrl-pgup & pgdn work in vim
set -g xterm-keys on

#select-window -t 1
#highlight active window
# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on 
setw -g automatic-rename off
#osx clipboard
set-option -g default-command "reattach-to-user-namespace -l zsh"
#set -g default-terminal "xterm-256color"
#set -g xterm-keys on
#supposedly fixes pausing in vim 
set-option -sg escape-time 1
set-option -g status-utf8 on 
set-option -g status-justify centre
#status bar
set -g status-bg black
set -g status-fg white
set-window-option -g window-status-format '#[fg=colour166,dim]#I#[fg=blue]:#[default]#W#[fg=grey,dim]#F'
set-window-option -g window-status-current-format '#[bg=red,fg=cyan]#I#[bg=red,fg=cyan]:#[fg=colour230,bg=red]#W#[fg=dim]#F'
#status right options
set -g status-right '#[fg=yellow][%a, %b %m %Y | #[fg=colour166]%r]#[default]'
set-option -g pane-active-border-fg red
set-option -g pane-active-border-bg white
set-option -g pane-border-fg yellow
set-option -g pane-border-bg black
set-option -g status-position top

bind C-v run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste buffer"
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"

